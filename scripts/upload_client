import base64
import json
import os

import requests

username = 'bhavana'
password = '12345'
response = requests.post("http://localhost:8081/login", verify=False, auth=(username, password),
                         headers={'Content-Type': 'application/json'})
assert response.status_code == 200
access_token = json.loads(response.text)['access_token']
access_token_auth = "access_token {0}".format(access_token)

# this is a client code snippet that takes the file name and constructs a multi-form http request body
#
# filepath = "/Users/bsudharshan/PycharmProjects/fileshareapp/RBTreeSampleImage.png"
filepath="/Users/bsudharshan/PycharmProjects/fileshareapp/christfriends.png"
file_size = os.stat(filepath).st_size
print(file_size)

resp = requests.post("http://0.0.0.0:8080/upload", data=dict(upload_phase='start', size=file_size),
                     headers=dict(
                         Authorization=access_token_auth))

decoded_resp = resp.content.decode('utf-8')
response_json = json.loads(decoded_resp)

start_offset = (response_json['start_offset'])
end_offset = (response_json['end_offset'])
upload_session_id = (response_json['upload_session_id'])

f = open(filepath, "rb")

# byte_test = bytearray()
encoded_test=[]

while start_offset != end_offset:
    s = start_offset
    f.seek(s)
    read_size=end_offset-start_offset
    b = f.read(read_size)

    # byte_test.extend(b)

    base64_bytes = base64.b64encode(b)
    video_chunk = base64_bytes.decode('utf-8')
    encoded_test.append(video_chunk)


    print(video_chunk)
    print("\n")

    resp = requests.post("http://0.0.0.0:8080/upload",
                         data=dict(upload_phase='transfer', upload_session_id=upload_session_id,
                                   video_file_chunk=video_chunk),
                         headers=dict(
                             Authorization=access_token_auth))

    decoded_resp = resp.content.decode('utf-8')
    response_json = json.loads(decoded_resp)

    start_offset = (response_json['start_offset'])
    end_offset = (response_json['end_offset'])


byte_test=bytearray()
for element in encoded_test:
    encoded=element.encode('utf-8')
    bc=base64.b64decode(encoded)
    byte_test.extend(bc)

f = open("demofile2.png", "wb")
f.write(byte_test)
f.close()
